name: "Make Release"

description: "Makes installation on specific Nodejs version and releases with specific command"

inputs:
  release_command:
    description: 'Specific bash command to create release'
    required: true



  node_version:
    description: 'The Nodejs Version for installation and release'
    required: false
    default: '16.16.0'
  npm_registry:
    description: "The registry to make release to"
    required: false
    default: npm-registry.deip.world
  git_author_name:
    description: 'Git Author Name'
    required: false
    default: 'Casimir CI'
  git_author_email:
    description: 'Git Author Email'
    required: false
    default: 'dev@deip.world'
  git_committer_name:
    description: 'Git Committer Name'
    required: false
    default: 'Casimir CI'
  git_committer_email:
    description: 'Git Committer Email'
    required: false
    default: 'dev@deip.world'

  npm_token:
    description: 'Required variable for release creation'
    required: true
  gh_token:
    description: 'github token'
    required: true


outputs:
  release_version:
    description: "Release Version"
    value: ${{ steps.release_version.outputs.release_tag }}

runs:
  using: composite
  steps:

    - name: Change Node.js version
      uses: actions/setup-node@v2
      with:
        node-version: ${{ inputs.node_version }}

    - name: Checkout source code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        token: ${{ inputs.gh_token }}

    - name: Install
      shell: bash
      run: npm install

    - name: NPM Authorization for Private Registry
      shell: bash
      run: npm config set //${{ inputs.npm_registry }}/:_authToken $NPM_TOKEN
      env:
        NPM_TOKEN: ${{ inputs.npm_token }}

    - name: Pre-release or Release
      shell: bash
      run: ${{ inputs.release_command }}
      env:
        NPM_TOKEN: ${{ inputs.npm_token }}
        GITHUB_TOKEN: ${{ inputs.gh_token }}
        GIT_AUTHOR_NAME: ${{ inputs.git_author_name }}
        GIT_AUTHOR_EMAIL: ${{ inputs.git_author_email }}
        GIT_COMMITTER_NAME: ${{ inputs.git_committer_name }}
        GIT_COMMITTER_EMAIL: ${{ inputs.git_committer_email }}

    - name: Set the current version
      id: release_version
      run: echo "::set-output name=release_tag::$(git describe --tags --abbrev=0)"
      shell: bash
